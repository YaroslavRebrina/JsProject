{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,CAAC,EAoBfF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,GAElC,EAaAL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,CACT,C,ICpBAE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,gG,SCiBlD,SAASC,EAAKC,EAAMC,GACzB,MAAMT,GACJA,EAAEU,SACFA,EAAQC,MACRA,EAAKC,SACLA,EAAQC,SACRA,EAAQC,SACRA,EAAQC,KACRA,EAAIC,IACJA,EAAGC,WACHA,GAAa,EAAKC,OAClBA,GAAS,GACPV,EAGEW,EAAaJ,EAAKK,QADP,sCACyB,YAE1C,OAEA,SAA2BX,EAAiB,QAC1C,MAAMY,EACe,SAAnBZ,EACI,YACA,6EAEaa,EAAAC,wCAKbC,EAAc,8BAFK,CAAAN,GAAYA,EAAkC,GAAzB,uBAEIO,CAChDP,OACIG,WAEAK,EAAkBT,GACtBA,EACI,2CACA,qBAEAU,EAAgB,gEAEZD,EAAgBT,2FAGPK,EAAAC,gFAITG,GAAiBT,qHAERK,EAAAC,8EAMnB,MAAO,gBACEvB,YAAaS,gBACpBS,EAAS,gBAAkB,oFAIKL,uBACrBC,GAAYF,6CACUF,qBAC7Bc,cACAG,oDAGsBhB,2CACEC,yCACDO,+CACGH,+CAGlC,CA1DOY,CAAkBnB,EA2D3B,CC7FAc,EAAiB,IAAAM,IAAoB1B,EAAA,SAAA2B,QAA6C,qBAAAd,KAAUe,WCG5F,IACE,MAAMC,EAAgBC,SAASC,cAAc,eAGvCC,GAFW9B,KAAKC,MAAM8B,aAAaC,QCHf,eDGyC,IAEvCC,MAC1B,CAACC,EAAGC,IAAM,IAAIC,KAAKD,EAAEzB,MAAQ,IAAI0B,KAAKF,EAAExB,QAGpC2B,EAAiB,CAAC,EAExBP,EAAWQ,SAAQC,IACjB,IAAoB,IAAhBA,EAAK1B,OAAiB,CACxB,MAAM2B,EAAW,IAAIJ,KAAKG,EAAK7B,MAC5B+B,qBACA1B,QAAQ,MAAO,KAGlB,GAFA2B,QAAQC,IAAI,oCAAqCH,IAE5CH,EAAeG,GAAW,CAC7B,MAAMI,EAAgBhB,SAASiB,cAAc,OAC7CD,EAAcE,UAAUC,IAAI,mBAE5B,MAAMC,EAAkBpB,SAASiB,cAAc,MAC/CG,EAAgBF,UAAUC,IAAI,oBAC9BC,EAAgBC,UAAY,GAAGT,yCAE/B,MAAMU,EAAmBtB,SAASiB,cAAc,OAChDK,EAAiBJ,UAAUC,IAAI,sBAE/BH,EAAcO,YAAYH,GAC1BJ,EAAcO,YAAYD,GAE1Bb,EAAeG,GAAYI,EAE3BjB,EAAcwB,YAAYP,EAC5B,CAEA,MAAMM,EAAmBb,EAAeG,GAAUX,cAChD,uBAEIuB,EAAiBlD,EAAKqC,GAC5BW,EAAiBG,mBAAmB,YAAaD,EACnD,KAGsBxB,SAAS0B,iBAAiB,qBAClChB,SAAQhC,IACtBA,EAAMiD,iBAAiB,SAAS,KACRjD,EAAMkD,WACdV,UAAUW,OAAO,YACjC,GAEJ,CAAE,MAAOC,GACPhB,QAAQC,IAAIe,EACd","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-474a829faa641ee8.js","src/js/card/index.js","node_modules/@parcel/runtime-js/lib/runtime-533abf5012e4da65.js","src/js/read.js","src/js/constants.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"aTfhT\\\":\\\"read.c0cf8ca7.js\\\",\\\"cdK6d\\\":\\\"icons.25614b9d.svg\\\"}\"));","// MStartsev/\n\n//  => .response || .results => itemCard\n\n// id; //string => 'uri'\n// category; //string\n// title; //string\n// abstract; //string\n// imageUrl; //string\n// imageAlt; //string\n// section; //string\n// url; //string =>\n\n// isFavorite; //boolean => 'false' || localStorage FAVORITE*\n// isRead; //boolean => 'false' || localStorage FAVORITE*\nimport sprite from '../../fonts/images/icons.svg';\n\nexport function card(data, containerClass) {\n  const {\n    id,\n    category,\n    title,\n    abstract,\n    imageUrl,\n    imageAlt,\n    date,\n    url,\n    isFavorite = false,\n    isRead = false,\n  } = data;\n\n  const dateRepl = /((\\d){4})-((\\d){2})-((\\d){2})(\\S)*/g;\n  const renderDate = date.replace(dateRepl, '$5/$3/$1');\n\n  return createCardElement(containerClass);\n\n  function createCardElement(containerClass = 'list') {\n    const alReadyReadText =\n      containerClass === 'read' //–ø—Ä–æ–ø–∏—Å–∞—Ç–∏ class ul –¥–ª—è —Å—Ç–æ—Ä. Read\n        ? 'Have read'\n        : `Already read \n        <svg width=\"18\" height=\"18\">\n          <use href=\"${sprite}#icon-check\"></use>\n        </svg>`;\n\n    const alReadyReadFalse = isRead => (!isRead ? `card__already--false` : '');\n\n    const alReadyRead = `<span class='card__already ${alReadyReadFalse(\n      isRead\n    )}'>${alReadyReadText}</span>`;\n\n    const isFavoriteFalse = isFavorite =>\n      isFavorite\n        ? `class='span--test favorite__text--false'`\n        : 'class=\"span--test\"';\n\n    const addToFavorite = `<button type='button' class='card__favorite'>\n\n      <span ${isFavoriteFalse(isFavorite)}>\n      Add to favorite\n        <svg  width=\"16\" heigth=\"16\">\n          <use href=\"${sprite}#icon-like-nonactive\"></use>\n        </svg>\n      </span>\n\n      <span ${isFavoriteFalse(!isFavorite)}>Remove from favorite\n        <svg width=\"16\" height=\"16\" class=\"box__icon remove-icon\">\n          <use href=\"${sprite}#icon-like-active\"></use>\n        </svg>\n      </span>\n\n    </button>`;\n\n    return `\n    <li id=${id} class='${containerClass}__card card ${\n      isRead ? 'card--opacity' : ''\n    }'>\n\n      <div class='card__container'>\n        <img class='card__img' src=\"${imageUrl}\" \n          alt=\"${imageAlt ?? abstract}\">\n        <span class='card__category'>${category}</span>\n        ${alReadyRead}\n        ${addToFavorite}\n      </div>\n\n      <h2 class='card__title'>${title}</h2>\n      <p class='card__abstract'>${abstract}</p>\n      <span class='card__date'>${renderDate}</span>\n      <a class='card__read' href=\"${url}\" target=\"_blank\">Read more</a>\n\n    </li>`;\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"cdK6d\")).toString();","import { card } from './card/index';\nimport { FAVORITE_KEY } from './constants';\n\ntry {\n  const readContainer = document.querySelector('.card__list');\n  const readNews = JSON.parse(localStorage.getItem(FAVORITE_KEY)) || [];\n\n  const sortedNews = readNews.sort(\n    (a, b) => new Date(b.date) - new Date(a.date)\n  );\n\n  const accordionItems = {};\n\n  sortedNews.forEach(news => {\n    if (news.isRead === true) {\n      const newsDate = new Date(news.date)\n        .toLocaleDateString()\n        .replace(/\\./g, '/');\n      console.log('üöÄ ~ file: read.js:17 ~ newsDate:', newsDate);\n\n      if (!accordionItems[newsDate]) {\n        const accordionItem = document.createElement('div');\n        accordionItem.classList.add('accordion__item');\n\n        const accordionHeader = document.createElement('h2');\n        accordionHeader.classList.add('accordion__title');\n        accordionHeader.innerHTML = `${newsDate}<span class=\"accordion__icon\"></span>`;\n\n        const accordionContent = document.createElement('div');\n        accordionContent.classList.add('accordion__content');\n\n        accordionItem.appendChild(accordionHeader);\n        accordionItem.appendChild(accordionContent);\n\n        accordionItems[newsDate] = accordionItem;\n\n        readContainer.appendChild(accordionItem);\n      }\n\n      const accordionContent = accordionItems[newsDate].querySelector(\n        '.accordion__content'\n      );\n      const readNewsMarkup = card(news);\n      accordionContent.insertAdjacentHTML('beforeend', readNewsMarkup);\n    }\n  });\n\n  const accordionTitles = document.querySelectorAll('.accordion__title');\n  accordionTitles.forEach(title => {\n    title.addEventListener('click', () => {\n      const accordionItem = title.parentNode;\n      accordionItem.classList.toggle('active');\n    });\n  });\n} catch (error) {\n  console.log(error);\n}\n","// favorite.js constants\n\nexport const FAVORITE_KEY = \"Favorites\"\nexport const FAVORITE_TOTAL = \"favorites-total\"\nexport const RENDERED = \"rendered\"\n\n// read.js constants\n\nconst READ_NEWS_KEY = 'readNews';"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$3b1f7eb7e0ccd5ad$export$aa3e815946b80764","data","containerClass","category","title","abstract","imageUrl","imageAlt","date","url","isFavorite","isRead","renderDate","replace","alReadyReadText","$parcel$interopDefault","$595e68c753516eff$exports","alReadyRead","alReadyReadFalse","isFavoriteFalse","addToFavorite","createCardElement","URL","resolve","toString","readContainer","document","querySelector","sortedNews","localStorage","getItem","sort","a","b","Date","accordionItems","forEach","news","newsDate","toLocaleDateString","console","log","accordionItem","createElement","classList","add","accordionHeader","innerHTML","accordionContent","appendChild","readNewsMarkup","insertAdjacentHTML","querySelectorAll","addEventListener","parentNode","toggle","error"],"version":3,"file":"read.c0cf8ca7.js.map"}